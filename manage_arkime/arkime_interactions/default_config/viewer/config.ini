[default]
debug=1
dropUser=nobody
dropGroup=daemon

elasticsearch=https://_OS_ENDPOINT_
elasticsearchBasicAuth=_OS_AUTH_
rotateIndex=daily

passwordSecret=_PASSWORD_SECRET_

cronQueries=auto

spiDataMaxIndices=7
pluginsDir=/opt/arkime/plugins
viewerPlugins=writer-s3
viewPort=_VIEWER_PORT_

### PCAP Config
pcapDir=/opt/arkime/raw
pcapWriteMethod=s3

### OIDC Config
# To configure OIDC you will need to
# 0) Make sure Arkime is working in basic auth mode and you can authenticate with the admin user
# 1) Using Arkime, create a user with the usersAdmin role assigned and a userId matching their OIDC
#    authUserIdField value, this will allow that user to assign roles and such
# 2) Fill in the <URL>, <ID>, <FIELD> in the config below
#      For cognito they might look something like
#        authDiscoverURL=https://cognito-idp.REGION.amazonaws.com/REGION_xxxxxxxxx
#        authClientId=xxxxxxxxxxxxxxxxxxxxxxxxxx
#        authUserIdField=email
# 3) Verify that userAutoCreateTmpl is creating the user using the correct fields and setting
# 4) Edit the ViewerPassword secret in AWS SecretsManager updating the authSecret key to match the OIDC client secret
# 5) Uncomment the following configuration
# 6) Update your OIDC server configuration with the redirect URL, it will be _VIEWER_DNS_/auth/login/callback
# 7) Run the manage_arkime.py config-update command which will deploy the new config files
#authDiscoverURL=<URL>
#authClientId=<ID>
#authUserIdField=<FIELD>
#userAutoCreateTmpl={"userId": "${this.preferred_username}", "userName": "${this.name}", "enabled": true, "webEnabled": true, "headerAuthEnabled": true, "emailSearch": true, "createEnabled": false, "removeEnabled": false, "packetSearch": true, "roles": ["arkimeUser", "cont3xtUser"] }
#authTrustProxy=true
#userNameHeader=oidc
#authClientSecret=_AUTH_SECRET_
#authRedirectURIs=https://_VIEWER_DNS_/auth/login/callback
